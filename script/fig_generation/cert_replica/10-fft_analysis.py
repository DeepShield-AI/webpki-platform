import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import correlate

# 示例序列
timestamps = np.array([
    1703206835542,
    1703207229467,
    1703210113314,
    1703213298727,
    1703219791087,
    1703221369040,
    1703222727076,
    1703206854068,
    1703227401655,
    1703233927258,
    1703234007948,
    1703234092569,
    1703234381667,
    1703234292210,
    1703233797090,
    1703234560156,
    1703234516446,
    1703234266263,
    1703235357768,
    1703235454934,
    1703235691401,
    1703235807874,
    1703236405612,
    1703236135816,
    1703236184479,
    1703236858205,
    1703236763811,
    1703235879287,
    1703237029427,
    1703236726095,
    1703236641946,
    1703237127136,
    1703238992266,
    1703239179973,
    1703239560742,
    1703239633470,
    1703239066673,
    1703239830424,
    1703239977157,
    1703239747495,
    1703239412222,
    1703234725806,
    1703240623279,
    1703240254227,
    1703241214163,
    1703240400728,
    1703238179077,
    1703242403304,
    1703242669709,
    1703243128472,
    1703243058665,
    1703243400731,
    1703243468902,
    1703242945342,
    1703244025573,
    1703234129109,
    1703234351137,
    1703244173949,
    1703235384938,
    1703241484098,
    1703243009533,
    1703235455207,
    1703244548708,
    1703236648649,
    1703243321097,
    1703244480810,
    1703234272346,
    1703236445766,
    1703247787435,
    1703248279433,
    1703239180237,
    1703239530870,
    1703234448354,
    1703239831272,
    1703239615452,
    1703239672199,
    1703239759902,
    1703239991827,
    1703252455797,
    1703241259014,
    1703255631624,
    1703254778827,
    1703255785704,
    1703242735729,
    1703243115061,
    1703243489990,
    1703258995599,
    1703235483324,
    1703243373212,
    1703247833706,
    1703239848377,
    1703239679732,
    1703234161017,
    1703266733526,
    1703242745485,
    1703267108503,
    1703259014049,
    1703271778758,
    1703269772705,
    1703273138052,
    1703275571362,
    1703277190428,
    1703279806069,
    1703281450123,
    1703282221360,
    1703283622657,
    1703286909974,
    1703287090435,
    1703288561312,
    1703289793954,
    1703290191338,
    1703291685987
])

# 计算差值
def compute_differences(seq):
    return np.diff(seq)

# 计算自相关函数
def autocorrelation(x):
    n = len(x)
    variance = np.var(x)
    x = x - np.mean(x)
    result = correlate(x, x, mode='full')
    result = result / (variance * n)
    result = result[n - 1:]
    return result

# 计算傅里叶变换
def fourier_transform(x):
    return np.fft.fft(x)

# 计算差值序列
differences = compute_differences(sorted(timestamps))
print(differences)

# 计算并绘制自相关函数
acf = autocorrelation(differences)

plt.figure(figsize=(10, 6))
plt.stem(acf, use_line_collection=True)
plt.title('Autocorrelation Function of Differences')
plt.xlabel('Lag')
plt.ylabel('Autocorrelation')
plt.grid(True)
plt.show()

# 计算并绘制傅里叶变换结果
fft_result = fourier_transform(differences)
frequencies = np.fft.fftfreq(len(differences))

plt.figure(figsize=(10, 6))
plt.plot(frequencies, np.abs(fft_result), marker='o')
plt.title('Fourier Transform of Differences')
plt.xlabel('Frequency')
plt.ylabel('Magnitude')
plt.grid(True)
plt.savefig('10-1.png', dpi=300, bbox_inches='tight')
plt.show()
